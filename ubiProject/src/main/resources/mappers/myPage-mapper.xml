<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="edu.kh.project.myPage.model.mapper.MyPageMapper">

	<!-- 내 기본 정보 조회 -->
	<select id="info">
		SELECT MEMBER_ID, MEMBER_NICKNAME, MEMBER_EMAIL,
		MEMBER_TEL, MEMBER_ADDRESS,
		ENROLL_DATE, MEMBER_TADDRESS, MEMBER_IMG, MEMBER_STANDARD, MEMBER_NO, MEMBER_NAME
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME =
		#{memberNickname},
		MEMBER_TEL = #{memberTel},
		MEMBER_ADDRESS =
		#{memberAddress},
		MEMBER_TADDRESS = #{memberTaddress},
		MEMBER_STANDARD =
		#{memberStandard},
		MEMBER_EMAIL = #{memberEmail}
		WHERE MEMBER_NO =
		#{memberNo}
	</update>

	<!-- 내가 찜한 혜택 조회 -->
	<select id="getWelfareBenefits">
		SELECT SERVICE_NAME, AGENCY, DESCRIPTION,
		RECEPTION_START, RECEPTION_END, CATEGORY, SERVICE_NO, API_SERVICE_ID
		FROM WELFARE
		WHERE MEMBER_NO = #{memberNo}
		AND JJ_DEL_FL = 'N'
		ORDER BY
		JJ_TIME DESC
	</select>

	<!-- 내가 찜한 채용 조회 -->
	<select id="getRecruitBenefits">
		SELECT JOB_TITLE, JOB_FACILITY_NAME, JOB_SALARY,
		JOB_POSITION, JOB_REQUIREMENT, JOB_CONTENT, RCPTBGNDT, RCPTENDDT
		FROM
		WELFARE_FACILITY_JOB
		WHERE MEMBER_NO = #{memberNo}
		AND JJ_DEL_FL = 'N'
		ORDER BY JJ_TIME
	</select>

	<!-- 내가 찜한 시설 조회 -->
	<select id="getFacilityBenefits">
		SELECT *
		FROM welfare_facility
		WHERE member_no = #{memberNo}
		AND jj_del_fl = 'N'
	</select>

	<!-- 작성글 조회 -->
	<select id="board">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.BOARD_CONTENT,
		TO_CHAR(b.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		B.BOARD_READ_COUNT,
		M.MEMBER_NICKNAME,
		B.POST_TYPE,
		B.STAR_COUNT
		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
		WHERE
		B.MEMBER_NO = #{memberNo}
		AND BOARD_DEL_FL = 'N'
		ORDER BY B.BOARD_DATE
		DESC
	</select>

	<!-- 작성글에 포함된 해시태그 조회 -->
	<select id="selectHashtagsByBoardNoList" resultType="map">
		<choose>
			<when test="boardNoList != null and boardNoList.size() > 0">
				SELECT BOARD_NO, HASHTAG_NAME
				FROM BOARD_HASHTAG
				WHERE BOARD_NO IN
				<foreach collection="boardNoList" item="boardNo" open="("
					separator="," close=")">
					#{boardNo}
				</foreach>
			</when>
			<otherwise>
				SELECT BOARD_NO, HASHTAG_NAME
				FROM BOARD_HASHTAG
				WHERE 1 = 0
			</otherwise>
		</choose>
	</select>

	<!-- 작성 댓글 조회 -->
	<select id="Comment">
		SELECT
		C.COMMENT_NO,
		B.POST_TYPE,
		B.BOARD_TITLE,
		TO_CHAR(C.COMMENT_DATE, 'YYYY-MM-DD') AS COMMENT_DATE,
		C.COMMENT_DATE,
		COUNT(CL.COMMENT_NO) AS LIKE_COUNT
		FROM COMMENTS C
		JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		LEFT JOIN COMMENT_LIKE CL ON C.COMMENT_NO = CL.COMMENT_NO
		WHERE
		C.MEMBER_NO = #{memberNo}
		AND C.COMMENT_DEL_FL = 'N'
		AND C.COMMENT_NO IS NOT NULL
		GROUP BY
		C.COMMENT_NO,
		B.POST_TYPE,
		B.BOARD_TITLE,
		C.COMMENT_CONTENT,
		C.COMMENT_DATE
		ORDER BY C.COMMENT_DATE
	</select>

	<!-- 내가 좋아요를 누른 게시글 조회 -->
	<select id="like">
		SELECT
		b.BOARD_NO,
		b.BOARD_TITLE,
		b.BOARD_CONTENT,
		TO_CHAR(b.BOARD_DATE, 'YYYY-MM-DD') AS BOARD_DATE,
		m.MEMBER_NICKNAME,
		b.POST_TYPE,
		LISTAGG(bh.HASHTAG_NAME, ', ') WITHIN GROUP (ORDER BY bh.HASHTAG_NAME) AS HASHTAG
		FROM
		BOARD_LIKE bl
		JOIN BOARD b ON bl.BOARD_NO = b.BOARD_NO
		JOIN MEMBER m ON
		b.MEMBER_NO = m.MEMBER_NO
		LEFT JOIN BOARD_HASHTAG bh ON b.BOARD_NO =
		bh.BOARD_NO
		WHERE bl.MEMBER_NO = #{memberNo}
		GROUP BY b.BOARD_NO,
		b.BOARD_TITLE, b.BOARD_CONTENT,
		b.BOARD_DATE, m.MEMBER_NICKNAME, b.POST_TYPE
	</select>

	<!-- 내가 좋아요를 누른 댓글 조회 -->
	<select id="likeComment">
		SELECT
		C.COMMENT_NO,
		B.POST_TYPE,
		B.BOARD_TITLE,
		C.COMMENT_CONTENT,
		TO_CHAR(C.COMMENT_DATE, 'YYYY-MM-DD') AS COMMENT_DATE,
		COUNT(CL2.COMMENT_NO) AS LIKE_COUNT -- 전체 좋아요 수
		FROM COMMENT_LIKE CL -- 내가 좋아요 누른 목록에서 시작
		JOIN COMMENTS C ON CL.COMMENT_NO = C.COMMENT_NO
		JOIN BOARD B ON
		C.BOARD_NO = B.BOARD_NO
		LEFT JOIN COMMENT_LIKE CL2 ON C.COMMENT_NO =
		CL2.COMMENT_NO -- 전체 좋아요 수 세기용
		WHERE
		CL.MEMBER_NO = #{memberNo} -- 내가 좋아요 누른 댓글만
		AND C.COMMENT_DEL_FL = 'N'
		GROUP BY
		C.COMMENT_NO,
		B.POST_TYPE,
		B.BOARD_TITLE,
		C.COMMENT_CONTENT,
		C.COMMENT_DATE
		ORDER BY C.COMMENT_DATE
	</select>

	<!-- 회원의 비밀번호 조회 -->
	<select id="selectPw">
		SELECT MEMBER_PW
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="changePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 회원 탈퇴 -->
	<update id="withdraw">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 프로필 이미지 변경 -->
	<update id="profile">
		UPDATE "MEMBER" SET
		MEMBER_IMG = #{memberImg}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 프로필 이미지 초기화 -->
	<update id="deleteProfile">
		UPDATE "MEMBER" SET
		MEMBER_IMG = NULL
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<insert id="insertUploadFile">
		INSERT INTO "UPLOAD_FILE"
		VALUES(SEQ_FILE_NO.NEXTVAL, #{filePath},
		#{fileOriginalName}, #{fileRename}, DEFAULT,
		#{memberNO})
	</insert>

	<!-- 파일 목록 조회 -->
	<select id="fileList" resultType="UploadFile">
		SELECT FILE_NO, FILE_PATH, FILE_ORIGINAL_NAME, FILE_RENAME,
		MEMBER_NICKNAME, TO_CHAR(FILE_UPLOAD_DATE, 'YYYY-MM-DD') FILE_UPLOAD_DATE
		FROM "UPLOAD_FILE"
		JOIN "MEMBER" ON ("UPLOAD_FILE".MEMBER_NO = "MEMBER".MEMBER_NO)
		WHERE "UPLOAD_FILE".MEMBER_NO = #{memberNo}
		ORDER BY FILE_NO DESC
	</select>

	<!-- 혜택찜 취소 -->
	<update id="cancelZzim">
		UPDATE "WELFARE" SET
		JJ_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
		AND SERVICE_NO = #{serviceNo}
	</update>

	<select id="selectMemberByNo" parameterType="int"
		resultType="Member">
		SELECT
		MEMBER_NO,
		MEMBER_ID,
		MEMBER_NAME,
		MEMBER_ADDRESS,
		MEMBER_TADDRESS,
		MEMBER_STANDARD,
		AUTHORITY
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>


	<update id="updateFacilityZzimDelFl" parameterType="map">
		UPDATE welfare_facility
		SET jj_del_fl = 'Y'
		WHERE member_no = #{memberNo}
		AND facility_no = #{facilityNo}
	</update>



</mapper>
