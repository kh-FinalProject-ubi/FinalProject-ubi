<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="edu.kh.project.board.model.mapper.MytownBoardMapper">


	<!-- 로그인된 회원과 동일한 시군구의 회원이 작성한 게시글 목록 조회 -->
	<!-- BoardMapper.xml -->
	<select id="selectLocalBoardList"
		resultType="edu.kh.project.board.model.dto.Board">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.POST_TYPE,
		SUBSTR(B.BOARD_CONTENT, 1, 100) AS BOARD_CONTENT,
  <![CDATA[
  CASE 
    WHEN SYSDATE - B.BOARD_DATE < 1/24/60 THEN FLOOR((SYSDATE - B.BOARD_DATE)*24*60*60) || '초 전'
    WHEN SYSDATE - B.BOARD_DATE < 1/24 THEN FLOOR((SYSDATE - B.BOARD_DATE)*24*60) || '분 전'
    WHEN SYSDATE - B.BOARD_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_DATE)*24) || '시간 전'
    WHEN SYSDATE - B.BOARD_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_DATE) || '일 전'
    WHEN SYSDATE - B.BOARD_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_DATE)/30) || '달 전'
    ELSE FLOOR((SYSDATE - B.BOARD_DATE)/365) || '년 전'
  END AS BOARD_DATE
]]>,
		B.BOARD_READ_COUNT,
		B.STAR_COUNT,
		B.FACILITY_API_SERVICE_ID,
		B.API_SERVICE_ID,
		M.MEMBER_NICKNAME,
		M.MEMBER_IMG,
		M.REGION_CITY,
		M.REGION_DISTRICT,


		(SELECT COUNT(*) FROM BOARD_LIKE L WHERE L.BOARD_NO = B.BOARD_NO) AS
		LIKE_COUNT,


		(SELECT I.IMAGE_PATH || '/' || I.IMAGE_NAME
		FROM BOARD_IMAGE I
		WHERE I.BOARD_NO = B.BOARD_NO AND I.IMAGE_ORDER = 0 AND ROWNUM = 1) AS
		THUMBNAIL,



		(SELECT LISTAGG(H.HASHTAG_NAME, ',')
		WITHIN GROUP (ORDER BY H.HASHTAG_NAME)
		FROM BOARD_HASHTAG H
		WHERE H.BOARD_NO = B.BOARD_NO) AS HASHTAGS,

		LS.BOARD_TYPE,
		LS.POST_TYPE

		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
		JOIN BOARD_TYPE BT ON B.BOARD_TYPE = BT.BOARD_CODE
		LEFT JOIN LOCAL_SUBCATEGORY LS ON B.BOARD_TYPE = LS.BOARD_TYPE
		AND B.POST_TYPE = LS.POST_TYPE
		WHERE B.BOARD_TYPE = 3
		AND B.BOARD_DEL_FL = 'N'

		ORDER BY B.BOARD_DATE DESC


	</select>

	<select id="getBoardLocalListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE BOARD_TYPE = 3 AND BOARD_DEL_FL = 'N'
	</select>


	<!-- 상세조회 -->
	<select id="selectLocalBoardDetail" parameterType="int"
		resultType="edu.kh.project.board.model.dto.Board">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.BOARD_CONTENT,
		B.BOARD_DATE,
		B.BOARD_READ_COUNT,
		B.POST_TYPE,
		NVL(B.STAR_COUNT, 0) AS STAR_COUNT,
		NVL((SELECT COUNT(*) FROM BOARD_LIKE WHERE BOARD_NO = B.BOARD_NO), 0) AS
		LIKE_COUNT,
		M.MEMBER_NICKNAME,
		M.AUTHORITY,
		(SELECT LISTAGG(H.HASHTAG_NAME, ',')
		FROM BOARD_HASHTAG H
		WHERE H.BOARD_NO = B.BOARD_NO) AS HASHTAGS,
		BT.BOARD_NAME,
		M.MEMBER_NO,
		M.REGION_CITY,
		M.REGION_DISTRICT,
		B.API_SERVICE_ID,
		B.FACILITY_API_SERVICE_ID ,
		LS.BOARD_TYPE,
		LS.POST_TYPE

		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
		JOIN BOARD_TYPE BT ON B.BOARD_TYPE = BT.BOARD_CODE
		LEFT JOIN LOCAL_SUBCATEGORY LS
		ON B.BOARD_TYPE = LS.BOARD_TYPE
		AND B.POST_TYPE = LS.POST_TYPE
		WHERE B.BOARD_NO = #{boardNo}
	</select>

	<!-- 조회수 증가 -->
	<update id="increaseReadCount">
		UPDATE BOARD
		SET BOARD_READ_COUNT = BOARD_READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>

	<!-- 게시글 작성 -->
	<insert id="insertBoard"
		parameterType="edu.kh.project.board.model.dto.Board">
		INSERT INTO BOARD (
		BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO,
		BOARD_DATE,BOARD_READ_COUNT,STAR_COUNT,POST_TYPE
		) VALUES (
		SEQ_BOARD_NO.NEXTVAL, 3, #{boardTitle}, #{boardContent}, #{memberNo}, SYSDATE, 0,
		#{starCount} ,#{postType}
		)
	</insert>

	<!-- 해시태그 입력 -->
	<insert id="insertHashtag">
		INSERT INTO BOARD_HASHTAG (BOARD_NO, HASHTAG_NAME)
		VALUES (#{boardNo}, #{tag})
	</insert>

	<!-- 해시태그 확인 -->
	<select id="checkHashtagExists" resultType="int">
		SELECT COUNT(*) FROM BOARD_HASHTAG
		WHERE BOARD_NO = #{boardNo} AND HASHTAG_NAME = #{tag}
	</select>

	<!-- 기존 해시태그 삭제 -->
	<delete id="deleteHashtags">
		DELETE FROM BOARD_HASHTAG
		WHERE BOARD_NO = #{boardNo}
	</delete>


	<select id="selectBoard"
		resultType="edu.kh.project.board.model.dto.Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO, TO_CHAR(BOARD_DATE,
		'YYYY-MM-DD') AS BOARD_DATE
		FROM BOARD
		WHERE BOARD_NO = #{boardNo}
	</select>

	<select id="getLastInsertedId" resultType="int">
		SELECT SEQ_BOARD_NO.CURRVAL FROM DUAL
	</select>


	<insert id="insertBoardImage"
		parameterType="edu.kh.project.board.model.dto.BoardImage">
		INSERT INTO BOARD_IMAGE (
		IMAGE_NO, IMAGE_PATH, IMAGE_ORDER, IMAGE_NAME, BOARD_NO
		)
		VALUES (
		IMAGE_SEQ.NEXTVAL, #{imagePath}, #{imageOrder}, #{imageName}, #{boardNo}
		)
	</insert>

	<!-- 게시글 이미지 목록 조회 -->
	<select id="selectBoardImageList"
		resultType="edu.kh.project.board.model.dto.BoardImage">
		SELECT *
		FROM BOARD_IMAGE
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMAGE_ORDER
	</select>



	<select id="checkBoardLike" resultType="int">
		SELECT COUNT(*) FROM BOARD_LIKE
		WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</select>

	<insert id="insertBoardLike">
		INSERT INTO BOARD_LIKE (BOARD_NO, MEMBER_NO)
		VALUES (#{boardNo}, #{memberNo})
	</insert>

	<delete id="deleteBoardLike">
		DELETE FROM BOARD_LIKE
		WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</delete>


	<!-- 게시글 삭제 -->
	<update id="deleteBoard">
		UPDATE BOARD
		SET BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</update>


	<!-- 게시글 수정 -->
	<update id="updateBoard"
		parameterType="edu.kh.project.board.model.dto.Board">
		UPDATE BOARD
		SET BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		STAR_COUNT = #{starCount},
		POST_TYPE = #{postType}
		WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</update>


	<!-- 기존 이미지 삭제 -->
	<delete id="deleteImagesByBoardNo">
		DELETE FROM BOARD_IMAGE
		WHERE BOARD_NO = #{boardNo}
	</delete>

	<!-- 새 이미지 삽입 <insert id="insertBoardImage" parameterType="BoardImage"> 
		INSERT INTO BOARD_IMAGE (IMAGE_NO, BOARD_NO, IMAGE_PATH, IMAGE_ORDER) VALUES 
		(SEQ_BOARD_IMAGE_NO.NEXTVAL, #{boardNo}, #{imagePath}, #{imageOrder}) </insert> -->

</mapper>
