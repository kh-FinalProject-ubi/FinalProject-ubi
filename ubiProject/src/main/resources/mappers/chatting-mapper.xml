<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.chatting.model.mapper.ChattingMapper">
	
	
	<!-- 채팅방 목록 조회 -->
	<select id="selectRoomList" resultType="ChattingRoom">
		SELECT CHAT_ROOM_NO
			,(SELECT CHAT_CONTENT FROM (
				SELECT * FROM MEMBER_CHAT_MESSAGE M2
				WHERE M2.CHAT_ROOM_NO = R.CHAT_ROOM_NO
				ORDER BY CHAT_NO DESC) 
				WHERE ROWNUM = 1) LAST_MESSAGE
			,TO_CHAR(NVL((SELECT MAX(CHAT_SEND_DATE) SEND_TIME 
					FROM MEMBER_CHAT_MESSAGE M
					WHERE R.CHAT_ROOM_NO  = M.CHAT_ROOM_NO), CHAT_CREATE_DATE), 
					'YYYY.MM.DD') SEND_TIME
			,NVL2((SELECT OPEN_MEMBER FROM MEMBER_CHAT_ROOM R2
				WHERE R2.CHAT_ROOM_NO = R.CHAT_ROOM_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				R.PARTICIPANT,
				R.OPEN_MEMBER
				) TARGET_NO	
			,NVL2((SELECT OPEN_MEMBER FROM MEMBER_CHAT_ROOM R2
				WHERE R2.CHAT_ROOM_NO = R.CHAT_ROOM_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_NICKNAME	
			,NVL2((SELECT OPEN_MEMBER FROM MEMBER_CHAT_ROOM R2
				WHERE R2.CHAT_ROOM_NO = R.CHAT_ROOM_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				(SELECT MEMBER_IMG FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT MEMBER_IMG FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_PROFILE
			,(SELECT COUNT(*) FROM MEMBER_CHAT_MESSAGE M WHERE M.CHAT_ROOM_NO = R.CHAT_ROOM_NO AND CHAT_READ_FL = 'N' AND SENDER_NO != 1) NOT_READ_COUNT
			,(SELECT MAX(CHAT_NO) SEND_TIME FROM MEMBER_CHAT_MESSAGE M WHERE R.CHAT_ROOM_NO  = M.CHAT_ROOM_NO) MAX_MESSAGE_NO
		FROM MEMBER_CHAT_ROOM R
		WHERE OPEN_MEMBER = #{memberNo}
		OR PARTICIPANT = #{memberNo}
		ORDER BY MAX_MESSAGE_NO DESC NULLS LAST
	</select>

	
	<!-- 채팅 상대 검색 -->
	<select id="selectTarget">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, PROFILE_IMG  FROM "MEMBER"
		WHERE (MEMBER_EMAIL LIKE '%${query}%' OR MEMBER_NICKNAME LIKE '%${query}%')
		AND MEMBER_DEL_FL = 'N'
		AND MEMBER_NO != ${memberNo}
	</select>
	
	<!-- 채팅방번호 체크(기존에 있는지) -->
	<select id="checkChattingRoomNo">
		SELECT NVL(SUM(CHATTING_ROOM_NO),0) CHATTING_ROOM_NO 
		FROM CHATTING_ROOM
		WHERE (OPEN_MEMBER = #{loginMemberNo} 
		AND PARTICIPANT = #{targetNo})
		OR (OPEN_MEMBER = #{targetNo} AND PARTICIPANT = #{loginMemberNo})
	</select>
	
	<!-- 채팅방 생성 -->
	<insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
	
		<selectKey keyProperty="chattingRoomNo" order="BEFORE" resultType="_int">
			SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO CHATTING_ROOM
		VALUES(#{chattingRoomNo}, DEFAULT, #{loginMemberNo}, #{targetNo})
	</insert>
	
	<!-- 채팅방 메세지 조회 -->
	<select id="selectMessageList">
		SELECT MESSAGE_NO, MESSAGE_CONTENT, READ_FL, SENDER_NO, CHATTING_ROOM_NO,
		TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME 
		FROM MESSAGE
		WHERE CHATTING_ROOM_NO  = #{chattingRoomNo}
		ORDER BY MESSAGE_NO
	</select>
	
	<!-- 채팅 메세지 중 내가 보내지 않은 글을 읽음으로 표시 -->
	<update id="updateReadFlag">
		UPDATE "MESSAGE" SET
		READ_FL = 'Y'
		WHERE CHATTING_ROOM_NO = #{chattingRoomNo}
		AND SENDER_NO != #{memberNo}
	</update>
	
	<!-- 채팅 메세지 삽입 -->
	<insert id="insertMessage">
		INSERT INTO "MESSAGE"
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, #{senderNo}, #{chattingRoomNo})
	</insert>
	

	
</mapper>

