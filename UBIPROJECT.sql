DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE BOARD_TYPE CASCADE CONSTRAINTS;
DROP TABLE HASHTAG CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE WELFARE CASCADE CONSTRAINTS;
DROP TABLE WELFARE_FACILITY CASCADE CONSTRAINTS;
DROP TABLE WELFARE_FACILITY_JOB CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE BOARD_IMAGE CASCADE CONSTRAINTS;
DROP TABLE BOARD_HASHTAG CASCADE CONSTRAINTS;
DROP TABLE BOARD_LIKE CASCADE CONSTRAINTS;
DROP TABLE COMMENTS CASCADE CONSTRAINTS;
DROP TABLE COMMENT_LIKE CASCADE CONSTRAINTS;
DROP TABLE RESERVATION CASCADE CONSTRAINTS;
DROP TABLE SAVE CASCADE CONSTRAINTS;
DROP TABLE MEMBER_CHAT_ROOM CASCADE CONSTRAINTS;
DROP TABLE MEMBER_CHAT_MESSAGE CASCADE CONSTRAINTS;
DROP TABLE AUTH_KEY CASCADE CONSTRAINTS;
DROP TABLE LOCAL_SUBCATEGORY CASCADE CONSTRAINTS;


--  REGION
CREATE TABLE REGION (
    REGION_DISTRICT VARCHAR2(100) NOT NULL,
    REGION_CITY VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_REGION PRIMARY KEY (REGION_DISTRICT, REGION_CITY)
);

-- BOARD_TYPE
CREATE TABLE BOARD_TYPE (
    BOARD_CODE NUMBER NOT NULL,
    BOARD_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_BOARD_TYPE PRIMARY KEY (BOARD_CODE)
);

-- HASHTAG
CREATE TABLE HASHTAG (
    HASHTAG_NO NUMBER NOT NULL,
    TAG_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_HASHTAG PRIMARY KEY (HASHTAG_NO),
    CONSTRAINT UK_HASHTAG_TAG_NAME UNIQUE (TAG_NAME)
);

-- MEMBER
CREATE TABLE MEMBER (
    MEMBER_NO NUMBER NOT NULL,
    MEMBER_ID NVARCHAR2(15) NOT NULL,
    MEMBER_PW NVARCHAR2(20) NOT NULL,
    MEMBER_NICKNAME NVARCHAR2(10) NOT NULL,
    MEMBER_EMAIL NVARCHAR2(50) NOT NULL,
    MEMBER_TEL CHAR(11) NOT NULL,
    MEMBER_ADDRESS NVARCHAR2(300),
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    MEMBER_DEL_FL CHAR(1) DEFAULT 'N' NOT NULL,
    MEMBER_IMG NVARCHAR2(300),
    AUTHORITY NUMBER DEFAULT 1 NOT NULL,
    MEMBER_TADDRESS NVARCHAR2(300),
    MEMBER_STANDARD CHAR(1) NOT NULL,
    MEMBER_PW_CH NVARCHAR2(20),
    REGION_DISTRICT VARCHAR2(100) NOT NULL,
    REGION_CITY VARCHAR2(100) NOT NULL,
    REPORT_COUNT NUMBER DEFAULT 0,
    SUSPENDED_FL CHAR(1) DEFAULT 'N' NOT NULL,
    KAKAO_ID NVARCHAR2(15),
    CONSTRAINT PK_MEMBER PRIMARY KEY (MEMBER_NO),
    CONSTRAINT UK_MEMBER_ID UNIQUE (MEMBER_ID),
    CONSTRAINT UK_MEMBER_EMAIL UNIQUE (MEMBER_EMAIL),
    CONSTRAINT UK_MEMBER_TEL UNIQUE (MEMBER_TEL),
    CONSTRAINT FK_REGION_TO_MEMBER FOREIGN KEY (REGION_DISTRICT, REGION_CITY)
        REFERENCES REGION (REGION_DISTRICT, REGION_CITY)
);

-- WELFARE
CREATE TABLE WELFARE (
    SERVICE_NO NUMBER NOT NULL,
    API_SERVICE_ID VARCHAR2(100) NOT NULL,
    AGENCY VARCHAR2(200) NOT NULL,
    SERVICE_NAME VARCHAR2(400) NOT NULL,
    DESCRIPTION CLOB,
    CATEGORY VARCHAR2(100) NOT NULL,
    RECEPTION_METHOD VARCHAR2(200),
    RECEPTION_START NVARCHAR2(20),
    RECEPTION_END NVARCHAR2(20),
    URL VARCHAR2(500),
    SERVICE_PAY NUMBER,
    LAT NUMBER,
    LNG NUMBER,
    REGION_DISTRICT VARCHAR2(100) NOT NULL,
    REGION_CITY VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_WELFARE PRIMARY KEY (SERVICE_NO),
    CONSTRAINT FK_REGION_TO_WELFARE FOREIGN KEY (REGION_DISTRICT, REGION_CITY)
        REFERENCES REGION (REGION_DISTRICT, REGION_CITY)
);

-- WELFARE_FACILITY
CREATE TABLE WELFARE_FACILITY (
    FACILITY_NO VARCHAR2(100) NOT NULL,
    FACILITY_NAME VARCHAR2(200) NOT NULL,
    FACILITY_KIND_CD VARCHAR2(10) NOT NULL,
    FACILITY_KIND_NM VARCHAR2(100),
    FACILITY_BIZNO VARCHAR2(20),
    OWNER VARCHAR2(100),
    FACILITY_TEL VARCHAR2(20),
    FACILITY_EMAIL VARCHAR2(300) DEFAULT '정보없음',
    FACILITY_ADDR VARCHAR2(300) NOT NULL,
    FACILITY_HOMEPAGE VARCHAR2(200),
    BUILDING_NO VARCHAR2(30),
    EVENT_TITLE VARCHAR2(200),
    EVENT_DATE_START NVARCHAR2(20),
    EVENT_DATE_END NVARCHAR2(20),
    EVENT_CONTENT VARCHAR2(1000),
    CONTACT_TEL VARCHAR2(20),
    REQUIREMENT VARCHAR2(1000),
    LAT NUMBER,
    LNG NUMBER,
    REGION_DISTRICT VARCHAR2(100) NOT NULL,
    REGION_CITY VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_WELFARE_FACILITY PRIMARY KEY (FACILITY_NO),
    CONSTRAINT FK_REGION_TO_WELFARE_FACILITY FOREIGN KEY (REGION_DISTRICT, REGION_CITY)
        REFERENCES REGION (REGION_DISTRICT, REGION_CITY)
);

-- WELFARE_FACILITY_JOB
CREATE TABLE WELFARE_FACILITY_JOB (
    JOB_NO NUMBER NOT NULL,
    JOB_TITLE VARCHAR2(200),
    JOB_START_DATE NVARCHAR2(20),
    JOB_END_DATE NVARCHAR2(20),
    JOB_SALARY VARCHAR2(200),
    JOB_POSITION VARCHAR2(100),
    JOB_CONTACT VARCHAR2(100),
    JOB_CONTACT_TEL VARCHAR2(20),
    JOB_REQUIREMENT VARCHAR2(1000),
    JOB_ADDRESS VARCHAR2(100) NOT NULL,
    REGION_DISTRICT VARCHAR2(100) NOT NULL,
    REGION_CITY VARCHAR2(100) NOT NULL,
    LAT NUMBER,
    LNG NUMBER,
    CONSTRAINT PK_WELFARE_FACILITY_JOB PRIMARY KEY (JOB_NO),
    CONSTRAINT FK_REGION_TO_WFJ FOREIGN KEY (REGION_DISTRICT, REGION_CITY)
        REFERENCES REGION (REGION_DISTRICT, REGION_CITY)
);


-- BOARD 테이블
CREATE TABLE BOARD (
    BOARD_NO NUMBER NOT NULL,
    BOARD_TITLE NVARCHAR2(1000) NOT NULL,
    BOARD_CONTENT NVARCHAR2(2000) NOT NULL,
    BOARD_DATE DATE DEFAULT SYSDATE NOT NULL,
    BOARD_UPDATE DATE,
    BOARD_DEL_FL CHAR(1) DEFAULT 'N' NOT NULL,
    BOARD_ANSWER CHAR(1) DEFAULT 'N' NOT NULL,
    BOARD_TYPE NUMBER NOT NULL,
    SERVICE_NO NUMBER NOT NULL,
    FACILITY_NO VARCHAR2(100) NOT NULL,
    STAR_COUNT NUMBER,
    POST_TYPE VARCHAR2(50),
    MEMBER_NO NUMBER NOT NULL,
    BOARD_REPORT_COUNT NUMBER DEFAULT 0,
    CONSTRAINT PK_BOARD PRIMARY KEY (BOARD_NO),
    CONSTRAINT FK_BOARD_TYPE_TO_BOARD FOREIGN KEY (BOARD_TYPE)
        REFERENCES BOARD_TYPE (BOARD_CODE),
    CONSTRAINT FK_WELFARE_TO_BOARD FOREIGN KEY (SERVICE_NO)
        REFERENCES WELFARE (SERVICE_NO),
    CONSTRAINT FK_WELFARE_FACILITY_TO_BOARD FOREIGN KEY (FACILITY_NO)
        REFERENCES WELFARE_FACILITY (FACILITY_NO),
    CONSTRAINT FK_MEMBER_TO_BOARD FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO)
);

-- BOARD_IMAGE
CREATE TABLE BOARD_IMAGE (
    IMAGE_NO NUMBER NOT NULL,
    IMAGE_PATH NVARCHAR2(200) NOT NULL,
    IMAGE_ORDER NUMBER NOT NULL,
    IMAGE_NAME NVARCHAR2(50) NOT NULL,
    BOARD_NO NUMBER NOT NULL,
    CONSTRAINT PK_BOARD_IMAGE PRIMARY KEY (IMAGE_NO),
    CONSTRAINT FK_BOARD_TO_BOARD_IMAGE FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO)
);

-- BOARD_HASHTAG
CREATE TABLE BOARD_HASHTAG (
    BOARD_NO NUMBER NOT NULL,
    HASHTAG_NO NUMBER NOT NULL,
    CONSTRAINT PK_BOARD_HASHTAG PRIMARY KEY (BOARD_NO, HASHTAG_NO),
    CONSTRAINT FK_BOARD_TO_BOARD_HASHTAG FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO),
    CONSTRAINT FK_HASHTAG_TO_BOARD_HASHTAG FOREIGN KEY (HASHTAG_NO)
        REFERENCES HASHTAG (HASHTAG_NO)
);

-- BOARD_LIKE
CREATE TABLE BOARD_LIKE (
    LIKE_NO NUMBER NOT NULL,
    MEMBER_NO NUMBER NOT NULL,
    BOARD_NO NUMBER NOT NULL,
    LIKE_DEL_FL CHAR(1) DEFAULT 'N',
    CONSTRAINT PK_BOARD_LIKE PRIMARY KEY (LIKE_NO, MEMBER_NO, BOARD_NO),
    CONSTRAINT FK_MEMBER_TO_BOARD_LIKE FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO),
    CONSTRAINT FK_BOARD_TO_BOARD_LIKE FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO)
);

-- COMMENT
CREATE TABLE COMMENTS (
    COMMENT_NO NUMBER NOT NULL,
    COMMENT_CONTENT NVARCHAR2(1500) NOT NULL,
    COMMENT_DATE DATE DEFAULT SYSDATE NOT NULL,
    COMMENT_UPDATE_DATE DATE,
    BOARD_NO NUMBER NOT NULL,
    COMMENT_PARENT_NO NUMBER,
    COMMENT_DEL_FL CHAR(1) DEFAULT 'N' NOT NULL,
    MEMBER_NO NUMBER NOT NULL,
    CONSTRAINT PK_COMMENT PRIMARY KEY (COMMENT_NO),
    CONSTRAINT FK_BOARD_TO_COMMENT FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO),
    CONSTRAINT FK_MEMBER_TO_COMMENT FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO),
    CONSTRAINT FK_COMMENT_TO_COMMENT FOREIGN KEY (COMMENT_PARENT_NO)
        REFERENCES COMMENTS (COMMENT_NO)
);

-- COMMENT_LIKE
CREATE TABLE COMMENT_LIKE (
    COMMENT_LIKE_NO NUMBER NOT NULL,
    MEMBER_NO NUMBER NOT NULL,
    BOARD_NO NUMBER NOT NULL,
    COMMENT_NO NUMBER NOT NULL,
    COMMENTLIKE_DEL_FL CHAR(1) DEFAULT 'N',
    CONSTRAINT PK_COMMENT_LIKE PRIMARY KEY (COMMENT_LIKE_NO, MEMBER_NO, BOARD_NO, COMMENT_NO),
    CONSTRAINT FK_MEMBER_TO_COMMENT_LIKE FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO),
    CONSTRAINT FK_BOARD_TO_COMMENT_LIKE FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD (BOARD_NO),
    CONSTRAINT FK_COMMENT_TO_COMMENT_LIKE FOREIGN KEY (COMMENT_NO)
        REFERENCES COMMENTS (COMMENT_NO)
);

-- RESERVATION
CREATE TABLE RESERVATION (
    RESERVATION_NO NUMBER NOT NULL,
    MEMBER_NO NUMBER NOT NULL,
    RCPTBGNDT DATE,
    RCPTENDDT DATE,
    UPDATED_AT DATE,
    RESERVATION_MESSAGE CHAR(1) DEFAULT 'N' NOT NULL,
    RESERVATION_IMAGE NVARCHAR2(300),
    CONSTRAINT PK_RESERVATION PRIMARY KEY (RESERVATION_NO),
    CONSTRAINT FK_MEMBER_TO_RESERVATION FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO)
);

-- SAVE
CREATE TABLE SAVE (
    MEMBER_NO NUMBER NOT NULL,
    FACILITY_NO VARCHAR2(100) NOT NULL,
    SERVICE_NO NUMBER NOT NULL,
    RESERVATION_NO NUMBER NOT NULL,
    WELFARE_LIKE CHAR(1) DEFAULT 'N' NOT NULL,
    JOB_NO NUMBER NOT NULL,
    CONSTRAINT PK_SAVE PRIMARY KEY (MEMBER_NO, FACILITY_NO, SERVICE_NO, RESERVATION_NO),
    CONSTRAINT FK_MEMBER_TO_SAVE FOREIGN KEY (MEMBER_NO)
        REFERENCES MEMBER (MEMBER_NO),
    CONSTRAINT FK_WELFARE_FACILITY_TO_SAVE FOREIGN KEY (FACILITY_NO)
        REFERENCES WELFARE_FACILITY (FACILITY_NO),
    CONSTRAINT FK_WELFARE_TO_SAVE FOREIGN KEY (SERVICE_NO)
        REFERENCES WELFARE (SERVICE_NO),
    CONSTRAINT FK_RESERVATION_TO_SAVE FOREIGN KEY (RESERVATION_NO)
        REFERENCES RESERVATION (RESERVATION_NO),
    CONSTRAINT FK_WELFARE_FACILITY_JOB_TO_SAVE FOREIGN KEY (JOB_NO)
        REFERENCES WELFARE_FACILITY_JOB (JOB_NO)
);

-- MEMBER_CHAT_ROOM
CREATE TABLE MEMBER_CHAT_ROOM (
    CHAT_ROOM_NO NUMBER NOT NULL,
    CHAT_SENDER NUMBER NOT NULL,
    CHAT_CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    CHAT_RECEIVER NUMBER NOT NULL,
    CHAT_ROOM_DEL_FL CHAR(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT PK_MEMBER_CHAT_ROOM PRIMARY KEY (CHAT_ROOM_NO, CHAT_SENDER),
    CONSTRAINT FK_CHAT_SENDER FOREIGN KEY (CHAT_SENDER)
        REFERENCES MEMBER (MEMBER_NO),
    CONSTRAINT FK_CHAT_RECEIVER FOREIGN KEY (CHAT_RECEIVER)
        REFERENCES MEMBER (MEMBER_NO)
);

-- MEMBER_CHAT_MESSAGE
CREATE TABLE MEMBER_CHAT_MESSAGE (
    CHAT_NO NUMBER NOT NULL,
    CHAT_ROOM_NO NUMBER NOT NULL,
    CHAT_SENDER NUMBER NOT NULL,
    CHAT_CONTENT NVARCHAR2(2000),
    CHAT_READ_FL CHAR(1) NOT NULL,
    CHAT_SEND_DATE DATE DEFAULT SYSDATE NOT NULL,
    CHAT_CONTENT_DEL_FL CHAR(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT PK_MEMBER_CHAT_MESSAGE PRIMARY KEY (CHAT_NO, CHAT_ROOM_NO, CHAT_SENDER),
    CONSTRAINT FK_CHAT_ROOM FOREIGN KEY (CHAT_ROOM_NO, CHAT_SENDER)
        REFERENCES MEMBER_CHAT_ROOM (CHAT_ROOM_NO, CHAT_SENDER),
    CONSTRAINT FK_CHAT_SENDER_MESSAGE FOREIGN KEY (CHAT_SENDER)
        REFERENCES MEMBER (MEMBER_NO)
);

-- AUTH_KEY
CREATE TABLE AUTH_KEY (
    AUTH_KEY_NO NUMBER NOT NULL,
    EMAIL NVARCHAR2(50) NOT NULL,
    AUTH_KEY CHAR(6) NOT NULL,
    CREATE_TIME DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_AUTH_KEY PRIMARY KEY (AUTH_KEY_NO)
);

-- LOCAL_SUBCATEGORY
CREATE TABLE LOCAL_SUBCATEGORY (
    POST_TYPE VARCHAR2(50) NOT NULL,
    BOARD_TYPE NUMBER NOT NULL,
    CONSTRAINT PK_LOCAL_SUBCATEGORY PRIMARY KEY (POST_TYPE, BOARD_TYPE),
    CONSTRAINT FK_BOARD_TYPE_TO_LOCAL_SUBCATEGORY FOREIGN KEY (BOARD_TYPE)
        REFERENCES BOARD_TYPE (BOARD_CODE)
);

-- 예시
-- REGION
INSERT INTO REGION VALUES ('강남구', '서울특별시');
INSERT INTO REGION VALUES ('수성구', '대구광역시');

INSERT INTO REGION (REGION_DISTRICT, REGION_CITY) VALUES ('마포구', '서울특별시');
INSERT INTO REGION (REGION_DISTRICT, REGION_CITY) VALUES ('송파구', '서울특별시');
INSERT INTO REGION (REGION_DISTRICT, REGION_CITY) VALUES ('종로구', '서울특별시');

COMMIT;


-- MEMBER
INSERT INTO MEMBER (
    MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NICKNAME, MEMBER_EMAIL,
    MEMBER_TEL, ENROLL_DATE, MEMBER_STANDARD, REGION_DISTRICT, REGION_CITY
) VALUES (
    1, 'user1', 'pw1', '홍길동', 'user1@example.com',
    '01012345678', SYSDATE, 'Y', '강남구', '서울특별시'
);

COMMIT;

INSERT INTO MEMBER (MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NICKNAME, MEMBER_EMAIL, MEMBER_TEL, MEMBER_STANDARD, REGION_DISTRICT, REGION_CITY)
VALUES (2, 'user2', 'pw2', '이순신', 'user2@example.com', '01022223333', 'Y', '강남구', '서울특별시');

INSERT INTO MEMBER (MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NICKNAME, MEMBER_EMAIL, MEMBER_TEL, MEMBER_STANDARD, REGION_DISTRICT, REGION_CITY)
VALUES (3, 'user3', 'pw3', '유관순', 'user3@example.com', '01033334444', 'Y', '마포구', '서울특별시');

INSERT INTO MEMBER (MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NICKNAME, MEMBER_EMAIL, MEMBER_TEL, MEMBER_STANDARD, REGION_DISTRICT, REGION_CITY)
VALUES (4, 'user4', 'pw4', '강감찬', 'user4@example.com', '01044445555', 'Y', '송파구', '서울특별시');


-- WELFARE
INSERT INTO WELFARE (
    SERVICE_NO, API_SERVICE_ID, AGENCY, SERVICE_NAME, CATEGORY,
    REGION_DISTRICT, REGION_CITY
) VALUES (
    1001, 'API001', '보건복지부', '어르신 돌봄 서비스', '노인복지',
    '강남구', '서울특별시'
);
COMMIT;


-- WELFARE_FACILITY
INSERT INTO WELFARE_FACILITY (
    FACILITY_NO, FACILITY_NAME, FACILITY_KIND_CD, FACILITY_ADDR,
    REGION_DISTRICT, REGION_CITY
) VALUES (
    'F001', '강남복지센터', '01', '서울 강남구 역삼동',
    '강남구', '서울특별시'
);
COMMIT;


-- BOARD_TYPE
INSERT INTO BOARD_TYPE VALUES (3, '우리동네');

-- HASHTAG
INSERT INTO HASHTAG VALUES (1, '#복지');
INSERT INTO HASHTAG VALUES (2, '#어르신');
COMMIT;

-- BOARD
INSERT INTO BOARD (
    BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_TYPE, SERVICE_NO, FACILITY_NO, MEMBER_NO
) VALUES (
    101, '복지 후기 남깁니다.', '정말 만족스러운 서비스였습니다.', 3, 1001, 'F001', 1
);

SELECT * FROM MEMBER WHERE MEMBER_NO = 1;
SELECT * FROM BOARD WHERE BOARD_NO = 101;

-- BOARD_HASHTAG
INSERT INTO BOARD_HASHTAG VALUES (101, 1);
INSERT INTO BOARD_HASHTAG VALUES (101, 2);
COMMIT;


-- COMMENT
INSERT INTO COMMENTS (
    COMMENT_NO, COMMENT_CONTENT, BOARD_NO, MEMBER_NO, COMMENT_PARENT_NO
) VALUES (
    201, '저도 이용해봤어요. 좋아요!', 101, 1, NULL
);

-- BOARD_LIKE
INSERT INTO BOARD_LIKE VALUES (301, 1, 101, 'N');
COMMIT;



--해시태그 기준 게시글 검색 (JOIN + GROUP)
SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_DATE, M.MEMBER_NICKNAME, LISTAGG(H.TAG_NAME, ', ') WITHIN GROUP (ORDER BY H.TAG_NAME) AS TAGS
FROM BOARD B
JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
LEFT JOIN BOARD_HASHTAG BH ON B.BOARD_NO = BH.BOARD_NO
LEFT JOIN HASHTAG H ON BH.HASHTAG_NO = H.HASHTAG_NO
GROUP BY B.BOARD_NO, B.BOARD_TITLE, B.BOARD_DATE, M.MEMBER_NICKNAME;


-- 지역별 게시글 수 및 평균 별점 (GROUP + JOIN + 서브쿼리)
SELECT R.REGION_CITY, R.REGION_DISTRICT, COUNT(B.BOARD_NO) AS TOTAL_POSTS, ROUND(AVG(NVL(B.STAR_COUNT, 0)), 2) AS AVG_STAR
FROM REGION R
JOIN MEMBER M ON R.REGION_DISTRICT = M.REGION_DISTRICT AND R.REGION_CITY = M.REGION_CITY
JOIN BOARD B ON M.MEMBER_NO = B.MEMBER_NO
GROUP BY R.REGION_CITY, R.REGION_DISTRICT;

-- 이순신(2) → 유관순(3)
INSERT INTO MEMBER_CHAT_ROOM (CHAT_ROOM_NO, CHAT_SENDER, CHAT_CREATE_DATE, CHAT_RECEIVER, CHAT_ROOM_DEL_FL)
VALUES (10, 2, SYSDATE, 3, 'N');

-- 유관순(3) → 강감찬(4)
INSERT INTO MEMBER_CHAT_ROOM (CHAT_ROOM_NO, CHAT_SENDER, CHAT_CREATE_DATE, CHAT_RECEIVER, CHAT_ROOM_DEL_FL)
VALUES (11, 3, SYSDATE, 4, 'N');

COMMIT;


-- 채팅방 10번: 2 → 3
INSERT INTO MEMBER_CHAT_MESSAGE (CHAT_NO, CHAT_ROOM_NO, CHAT_SENDER, CHAT_CONTENT, CHAT_READ_FL, CHAT_SEND_DATE, CHAT_CONTENT_DEL_FL)
VALUES (1, 10, 2, '안녕하세요 유관순님!', 'N', SYSDATE, 'N');

-- 채팅방 10번: 3 → 2
INSERT INTO MEMBER_CHAT_MESSAGE (CHAT_NO, CHAT_ROOM_NO, CHAT_SENDER, CHAT_CONTENT, CHAT_READ_FL, CHAT_SEND_DATE, CHAT_CONTENT_DEL_FL)
VALUES (2, 10, 3, '이순신님 반갑습니다!', 'N', SYSDATE, 'N');

-- 채팅방 11번: 3 → 4
INSERT INTO MEMBER_CHAT_MESSAGE (CHAT_NO, CHAT_ROOM_NO, CHAT_SENDER, CHAT_CONTENT, CHAT_READ_FL, CHAT_SEND_DATE, CHAT_CONTENT_DEL_FL)
VALUES (3, 11, 3, '강감찬님, 오늘 회의 가능합니다?', 'N', SYSDATE, 'N');

-- 채팅방 11번: 4 → 3
INSERT INTO MEMBER_CHAT_MESSAGE (CHAT_NO, CHAT_ROOM_NO, CHAT_SENDER, CHAT_CONTENT, CHAT_READ_FL, CHAT_SEND_DATE, CHAT_CONTENT_DEL_FL)
VALUES (4, 11, 4, '네 가능합니다. 몇 시에 뵐까요?', 'N', SYSDATE, 'N');

COMMIT;

SELECT 
    M.MEMBER_NICKNAME AS SENDER,
    MSG.CHAT_CONTENT,
    TO_CHAR(MSG.CHAT_SEND_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SENT_TIME
FROM 
    MEMBER_CHAT_MESSAGE MSG
    JOIN MEMBER M ON MSG.CHAT_SENDER = M.MEMBER_NO
WHERE MSG.CHAT_ROOM_NO = 10
ORDER BY MSG.CHAT_SEND_DATE;

-- 채팅방 11번 (3 ↔ 4)
SELECT 
    M.MEMBER_NICKNAME AS SENDER,
    MSG.CHAT_CONTENT,
    TO_CHAR(MSG.CHAT_SEND_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SENT_TIME
FROM 
    MEMBER_CHAT_MESSAGE MSG
    JOIN MEMBER M ON MSG.CHAT_SENDER = M.MEMBER_NO
WHERE MSG.CHAT_ROOM_NO = 11
ORDER BY MSG.CHAT_SEND_DATE;